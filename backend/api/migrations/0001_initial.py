# Generated by Django 4.2.20 on 2025-04-13 06:40

import api.models.projects
import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('creator', 'Creator'), ('client', 'Client')], default='client', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AINode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url_name', models.CharField(help_text="URL name for client access (e.g., 'my-project' for flow.vocative.ai/client/my-project/)", max_length=30, unique=True, validators=[api.models.projects.validate_url_name])),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('logo', models.ImageField(blank=True, help_text='Logo image for the project', null=True, upload_to=api.models.projects.project_logo_path)),
                ('main_color', colorfield.fields.ColorField(default='#007FFF', help_text='Main brand color for the project interface', image_field=None, max_length=25, samples=None)),
                ('creator', models.ForeignKey(limit_choices_to={'role': 'creator'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_internal_id', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('input_node', 'Input'), ('output_node', 'Output'), ('ai_node', 'AI'), ('code_node', 'Code')], max_length=20)),
                ('label', models.CharField(max_length=255)),
                ('position_x', models.FloatField()),
                ('position_y', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='api.project')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('input_text', models.TextField()),
                ('output_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='api.ainode')),
            ],
        ),
        migrations.CreateModel(
            name='CodeNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='code_data', to='api.node')),
            ],
        ),
        migrations.AddField(
            model_name='ainode',
            name='node',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_data', to='api.node'),
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edge_internal_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges', to='api.project')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to='api.node')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', to='api.node')),
            ],
            options={
                'unique_together': {('project', 'source', 'target')},
            },
        ),
    ]
