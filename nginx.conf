events {}

http {
    client_max_body_size 256M;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    
    # Enhanced logging
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" "$request_uri"';
    
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log debug;

    server {
        listen 80;
        server_name localhost;

        # Main app routes
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # API routes
        location /api/ {
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /admin {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /staticfiles/ {
            proxy_pass http://backend:8000/staticfiles/;
            proxy_set_header Host $host;
        }

        # CLIENT APP - The key fix: Completely separate the client routes
        location /client/ {
            # This is the crucial fix - we pass all /client/ requests to the client app
            # but don't rewrite the path, so React Router receives the full path with /client/ prefix
            proxy_pass http://vocative-flow-client-frontend-1:4000/client/;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Disable buffering for real-time updates
            proxy_buffering off;
        }

        # Client API
        location /client-api/ {
            proxy_pass http://vocative-flow-client-backend-1:8500/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /media/ {
            proxy_pass http://backend:8000/media/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}